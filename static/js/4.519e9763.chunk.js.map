{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/My posts/MyPosts.module.css","components/Profile/My posts/Post/Post.module.css","components/Profile/ProfileInfo/Status/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/My posts/Post/Post.jsx","components/Profile/My posts/PostForm/PostForm.jsx","components/Profile/My posts/MyPosts.jsx","components/Profile/My posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","activateEditMode","autoFocus","onClick","onFocus","event","target","select","onBlur","e","updateStatusThunk","value","onChange","ProfileInfo","className","styles","content","topPicture","src","alt","discription","avatar","profile","photos","small","userPhoto","Post","item","ava_message","message","like_count","likes","likesCount","likeCount","TextArea","Element","maxLength10","maxLength","PostForm","onSubmit","handleSubmit","Field","placeholder","name","component","validate","required","ReduxPostForm","reduxForm","form","MyPosts","postsElements","posts","map","p","id","s","postsBlock","redux_form","newPostMessage","addPost","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","Preloader","ProfileContainer","userId","this","match","params","history","push","setUsersPageThunk","getStatusThunk","isFetching","React","Component","compose","authorizedUserId","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.519e9763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topPicture\":\"ProfileInfo_topPicture__3f0X1\",\"discription\":\"ProfileInfo_discription__2Muqb\",\"avatar\":\"ProfileInfo_avatar__1OHiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__qqOM5\",\"posts\":\"MyPosts_posts__kWMOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3UJdc\",\"ava_message\":\"Post_ava_message__3KIXR\",\"avatar\":\"Post_avatar__3VrKA\",\"like_count\":\"Post_like_count__3_OKN\",\"likes\":\"Post_likes__1bbHP\",\"likesCount\":\"Post_likesCount__2Larh\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  \r\n  \r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n useEffect( () => {setStatus(props.status)}, [props.status])\r\n\r\n  const activateEditMode =  ()=> {\r\n    setEditMode(true)\r\n  }\r\n  const deactivateEditMode =  (e)=> {\r\n    setEditMode(false)\r\n    props.updateStatusThunk(e.target.value)\r\n  }\r\n  let handleFocus = (event) => event.target.select()\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value)\r\n  }\r\n  return (\r\n    <>\r\n      {editMode ? (\r\n          <div>\r\n            <span>\r\n              <input  autoFocus={true} onClick={activateEditMode} onFocus={handleFocus} onBlur={deactivateEditMode} value={status} onChange={onStatusChange} />\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <span onClick={activateEditMode} >\r\n              {status || 'No Status'}\r\n            </span>\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport styles from './ProfileInfo.module.css' ;\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileStatusWithHooks from \"./Status/ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n<div className={styles.topPicture}>\r\n<img \r\n        src='https://i.pinimg.com/originals/dc/ce/b1/dcceb1644c13f70559ab0fbce2f03d22.jpg'\r\n        alt=\"/\"\r\n      />\r\n</div>\r\n     \r\n      <div className={styles.discription}>\r\n        <div className={styles.avatar}>\r\n        {props.profile.photos.small !== null ? <img src={props.profile.photos.small} /> : <img src={userPhoto} />}\r\n\r\n        </div>\r\n      <ProfileStatusWithHooks status={props.status} updateStatusThunk={props.updateStatusThunk} profile={props.profile} />\r\n        </div>\r\n    \r\n      </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.css\";\r\n\r\nconst Post = props => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <div className={styles.ava_message}>\r\n      <img\r\n        className={styles.avatar}\r\n        src={props.avatar}\r\n        alt=\"https://kittentoob.com/wp-content/uploads/2018/04/British-Shorthair-1-750x419.jpg\"\r\n      />\r\n      {props.message}\r\n\r\n\r\n      </div>\r\n<div className={styles.like_count}>\r\n\r\n      <img\r\n        className={styles.likes}\r\n        src=\"https://www.stickees.com/files/animals/cat-meow/641-cat-yarn-sticker.png\"\r\n        alt=\"https://pngimg.com/uploads/like/like_PNG29.png\"\r\n      />\r\n      <div className={styles.likesCount}>\r\n      {props.likeCount}\r\n        </div>\r\n\r\n</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field } from 'redux-form';\r\nimport { maxLength, required} from '../../../../utils/validators/validators'\r\nimport { Element } from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst TextArea = Element('textarea')\r\nconst maxLength10 = maxLength(10)\r\nconst PostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    \r\n      <div>\r\n        <Field\r\n          placeholder={\"Text there...\"}\r\n          name={\"newPostMessage\"}\r\n          component={TextArea}\r\n          \r\n          validate={[  maxLength10, required  ]}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n      <div>\r\n        \r\n        <button>Remove Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport PostForm from \"./PostForm/PostForm\";\r\nimport { reduxForm } from 'redux-form';\r\n\r\nconst ReduxPostForm = reduxForm({form: 'profilePostForm'})(PostForm);\r\n\r\n\r\nconst MyPosts = props => {\r\n  \r\n  let postsElements = props.posts.map(p => (\r\n    <Post\r\n      id={p.id}\r\n      message={p.message}\r\n      avatar={p.avatar}\r\n      likeCount={p.likeCount}\r\n    />\r\n  ));\r\n\r\n \r\n\r\n\r\n  const onSubmit = (newPostMessage) => {\r\n    props.addPost(newPostMessage.newPostMessage)\r\n   \r\n    }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <div className={s.redux_form}>\r\n        <ReduxPostForm onSubmit={onSubmit}/>\r\n       </div>\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPosts;\r\n","\r\nimport {\r\n  addPostActionCreator\r\n  \r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  posts: state.profilePage,\r\n  newPostText: state.profilePage.newPostText, \r\n  posts: state.profilePage.posts\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n    addPost: (newPostMessage) => {\r\n      dispatch(addPostActionCreator(newPostMessage));\r\n         \r\n    }\r\n\r\n  }\r\n}\r\n\r\n  let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My posts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = ({profile, status, updateStatusThunk}) => {\r\n\r\nif (!profile) {\r\n  return <Preloader />\r\n}\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <ProfileInfo status={status} updateStatusThunk={updateStatusThunk} profile={profile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUsersPageThunk, updateStatusThunk, getStatusThunk } from \"../../redux/profile-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n  \r\n    let userId = this.props.match.params.userId\r\n  \r\n   if (!userId) {\r\n     userId = this.props.id\r\n     if (!userId) {\r\n       this.props.history.push('/login')\r\n     }\r\n   }\r\n    this.props.setUsersPageThunk(userId );\r\n    \r\n      this.props.getStatusThunk(userId)\r\n   \r\n    \r\n  }\r\n  render() {\r\n \r\n    return (\r\n      <>\r\n        {this.props.isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Profile updateStatusThunk={this.props.updateStatusThunk} status={this.props.status} profile={this.props.profile} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    isFetching: state.profilePage.isFetching,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    id: state.auth.id\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setUsersPageThunk, updateStatusThunk, getStatusThunk }),\r\n  withRouter,\r\n      withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}