{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogTextArea/DialogTextArea.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogTextArea/DialogTextArea.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","ss","dialogs","dialog","activeClassName","active","to","src","avatar","dialogName","name","Message","s","rightMessage","message","leftMessage","TextArea","Element","maxLength100","maxLength","DialogTextArea","textarea","onSubmit","handleSubmit","Field","placeholder","validate","required","component","DialogTextForm","reduxForm","form","Dialogs","dialogsElements","state","map","d","key","messagesElements","messages","m","dialogsItems","www","console","log","newMessageBody","addMessage","onMessageChange","newMessageText","mapStateToProps","dialogsPage","mapDispatchToProps","dispatch","addMessageActionCreator","compose","connect","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,2BAA2B,WAAa,iC,oBCA7ID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,+B,oBCAhHD,EAAOC,QAAU,CAAC,SAAW,mC,gHCgBdC,EAdI,SAAAC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAGC,SACjB,kBAAC,IAAD,CAASF,UAAWC,IAAGE,OAAQC,gBAAiBH,IAAGI,OAAQC,GAAIR,GAAM,yBAAKS,IAAKV,EAAMW,SACrF,yBAAKR,UAAWC,IAAGQ,YAAaZ,EAAMa,S,kBCI7BC,EAVC,SAAAd,GAGd,OAAOA,EAAME,GAAK,EACjB,yBAAKC,UAAWY,IAAEC,cAAehB,EAAMiB,SAEvC,yBAAKd,UAAWY,IAAEG,aAAclB,EAAMiB,U,0CCHnCE,EAAWC,YAAQ,YACnBC,EAAeC,YAAU,KAqBhBC,EApBQ,SAAAvB,GAKrB,OACE,0BAAMG,UAAWY,IAAES,SAAUC,SAAUzB,EAAM0B,cAC3C,6BACE,kBAACC,EAAA,EAAD,CACEC,YAAa,MACbf,KAAM,iBACNgB,SAAU,CAACC,IAAUT,GACrBU,UAAWZ,KAGf,4C,SCZAa,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CAA2BV,GAgCnCY,EA9BC,SAAAnC,GAId,IAAIoC,EAAkBpC,EAAMqC,MAAMhC,QAAQiC,KAAI,SAAAC,GAAC,OAC7C,kBAAC,EAAD,CAAYC,IAAKD,EAAErC,GAAIW,KAAM0B,EAAE1B,KAAMX,GAAIqC,EAAErC,GAAIS,OAAQ4B,EAAE5B,YAGvD8B,EAAmBzC,EAAMqC,MAAMK,SAASJ,KAAI,SAAAK,GAAC,OAC/C,kBAAC,EAAD,CAASH,IAAKG,EAAEzC,GAAIe,QAAS0B,EAAE1B,QAASf,GAAIyC,EAAEzC,QAShD,OACE,yBAAKC,UAAWY,IAAEV,SAChB,yBAAKF,UAAWY,IAAE6B,cAAeR,GAEjC,yBAAKjC,UAAWY,IAAE2B,UAAWD,GAE7B,kBAACT,EAAD,CAAgBP,SAZN,SAACoB,GACfC,QAAQC,IAAIF,EAAIG,gBAChBhD,EAAMiD,WAAWJ,EAAIG,iBAUmBC,WAAYjD,EAAMiD,WAAYC,gBAAiBlD,EAAMkD,gBAAiBC,eAAgBnD,EAAMqC,MAAMc,mB,uBC/BxIC,EAAkB,SAAAf,GACpB,MAAO,CACLA,MAAOA,EAAMgB,cAGbC,EAAqB,SAAAC,GACvB,MAAO,CACLN,WAAY,SAAAD,GACVO,EAASC,YAAwBR,OAKvCS,YACEC,YAAQN,EAAiBE,GACzBK,IAFFF,CAGEtB,GAEasB,sBACbC,YAAQN,EAAiBE,GAEtBK,IAHUF,CAIbtB","file":"static/js/3.2eba18d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3rHU_\",\"dialogsItems\":\"Dialogs_dialogsItems__2SRJU\",\"messages\":\"Dialogs_messages__2wb15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__16CG7\",\"dialog\":\"DialogItem_dialog__32J6s\",\"active\":\"DialogItem_active__2zDKL\",\"dialogName\":\"DialogItem_dialogName__P5QH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__HuwvE\",\"rightMessage\":\"Message_rightMessage__2OkbT\",\"leftMessage\":\"Message_leftMessage__xyabd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"DialogTextArea_textarea__1rE7I\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport ss from \"./DialogItem.module.css\"\nconst DialogItem = props => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={ss.dialogs}>\n      <NavLink className={ss.dialog} activeClassName={ss.active} to={path}><img src={props.avatar}   />\n      <div className={ss.dialogName}>{props.name}</div>\n        \n      </NavLink>\n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./Message.module.css\";\n\nconst Message = props => {\n \n\n  return props.id % 2 ?\n   <div className={s.rightMessage}>{props.message}</div>\n    : \n   <div className={s.leftMessage}>{props.message}</div>\n};\n\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./DialogTextArea.module.css\";\nimport { Field } from \"redux-form\";\nimport { Element } from \"../../common/FormsControls/FormsControls\";\nimport { required, maxLength } from \"../../../utils/validators/validators\";\n\nconst TextArea = Element('textarea')\nconst maxLength100 = maxLength(100);\nconst DialogTextArea = props => {\n \n\n\n\n  return (\n    <form className={s.textarea} onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          placeholder={\"tyt\"}\n          name={\"newMessageBody\"}\n          validate={[required, maxLength100]}\n          component={TextArea}\n        />\n      </div>\n      <button>Submit</button>\n    </form>\n  );\n};\n\nexport default DialogTextArea;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport DialogTextArea from \"./DialogTextArea/DialogTextArea\";\nimport { reduxForm } from 'redux-form';\n\n\n\n\n\nconst DialogTextForm = reduxForm({form: 'login'})(DialogTextArea);\n\nconst Dialogs = props => {\n\n \n\n  let dialogsElements = props.state.dialogs.map(d => (\n    <DialogItem key={d.id} name={d.name} id={d.id} avatar={d.avatar} />\n  ));\n\n  let messagesElements = props.state.messages.map(m => (\n    <Message key={m.id} message={m.message} id={m.id} />\n  ));\n\nconst onSubmit =(www) => {\n  console.log(www.newMessageBody)\n  props.addMessage(www.newMessageBody)\n}\n\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n\n      <div className={s.messages}>{messagesElements}</div>\n      \n      <DialogTextForm onSubmit={onSubmit} addMessage={props.addMessage} onMessageChange={props.onMessageChange} newMessageText={props.state.newMessageText}/>\n    </div>\n  );\n};\n\n\nexport default Dialogs;\n","import { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = state => {\n  return {\n    state: state.dialogsPage\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: newMessageBody => {\n      dispatch(addMessageActionCreator(newMessageBody));\n    }\n  };\n};\n\ncompose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n\n     withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}